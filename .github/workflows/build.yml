name: Build
run-name: Build with Blade3 Debian

on:
  workflow_dispatch:
    inputs:
      launchpad:
        description: use launchpad
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - mixtile-blade3

    steps:
      - name: Get more disk space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y git ssh make gcc libssl-dev \
          liblz4-tool expect g++ patchelf chrpath gawk texinfo \
          chrpath diffstat software-properties-common bison flex \
          fakeroot cmake gcc-multilib g++-multilib unzip device-tree-compiler \
          libncurses-dev python3-pip python3-pyelftools bc make build-essential \
          libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl \
          llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev \
          liblzma-dev uuid-dev lzma-dev liblzma-dev libbluetooth-dev python-parted-doc \
          u-boot-tools sudo time rsync libmpc-dev bsdmainutils

      - name: Install ppa dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y binfmt-support qemu-user-static live-build

      - name: Install debian_prepare
        shell: bash
        run: |
          sudo cp debian-rk3588.tar.gz /opt/ && sudo tar -xvf debian-rk3588.tar.gz -C /opt/ && \
          sudo apt-get update && sudo apt-get install -y xxd && \
          sudo chmod a+x debian_prepare.sh && sudo ./debian_prepare.sh

      - name: Install repo
        shell: bash
        run: |
          mkdir -p ~/.bin && \
          sudo curl https://storage.googleapis.com/git-repo-downloads/repo -o ~/.bin/repo && \
          sudo cp ~/.bin/repo /usr/bin/repo && sudo chmod a+x /usr/bin/repo

      - name: download code
        shell: bash
        run: |
          repo init -u https://github.com/mixtile-rockchip/manifests.git -b test -m rk3588_linux_release.xml && \
          repo sync

      - name: Build image
        shell: bash
        run: |
          echo '20' > input.txt && \
          echo '2' >> input.txt && \
          sudo ./build.sh chip < input.txt && sudo rm input.txt && \
          sudo ./build.sh all
    
      - name: Upload RK Image image
        uses: actions/upload-artifact@v3
        with:
          name: image-release-rockchip-format-mixtile-blade3-Debian
          path: output/update/Image/update.img
          if-no-files-found: error

      - name: Clean cache
        shell: bash
        run: sync && sudo rm -rf output && sync
